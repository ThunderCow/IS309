/*
CREATE_PERSON_SP.  Add a person to the VM_PERSON table. This procedure can be 
used to add a point of contact for an opportunity or organization, but can also 
be used when adding a member.  The procedure returns the identifier of the newly 
inserted person.  Duplicate email addresses are not permitted.  If a duplicate 
email is found, the procedures returns the identifier associated with that email 
address.  In the latter case, it is not an error for the given name and the 
surname to be NULL.  In this way, the procedure can be used as lookup function,
finding the person_id value for a given email address.

PARAMETERS:  Described below
RETURNS:  a new or existing person_id, using the p_location_id output parameter.  
ERROR MESSAGES:
    Error text:  "Missing mandatory value for parameter (x)  in context (y).  No person added." 
    Error meaning: A mandatory value is missing.  Here, y = 'CREATE_PERSON_SP'
	Error effect: Because a mandatory value is not provided, no data are 
            inserted into the VM_PERSON table.  The p_person_id value returned 
            is NULL.  
            
    Error text:  "Email address (x) is already used."
    Error effect: Because the email must be unique, no data are inserted into the 
            VM_PERSON data.  The p_person_ID value returned is the one that 
            corresponds to the person already in the table with this email.
*/

CREATE OR REPLACE PROCEDURE CREATE_PERSON_SP (
    p_person_ID         VM_PERSON.PERSON_ID%TYPE,
    p_person_email      VM_PERSON.PERSON_EMAIL%TYPE,
    P_person_given_name VM_PERSON.PERSON_GIVEN_NAME%TYPE,
    p_person_surname    VM_PERSON.PERSON_SURNAME%TYPE,
    p_person_phone      VM_PERSON.PERSON_PHONE%TYPE
)
IS
cursor chk_ID is
    SELECT PERSON_ID FROM VM_PERSON WHERE PERSON_EMAIL = p_person_email;

CURSOR chk_dup is
    SELECT PERSON_ID FROM VM_PERSON WHERE PERSON_ID = p_person_id;

ex_error exception;
p_count number (10);
err_msg_txt varchar(150) :=null;
chk_pr_id NUMBER;
chk_pr_dup number;
inserted_id number;
lv_return_value number;

BEGIN

OPEN chk_dup;
FETCH chk_dup INTO chk_pr_dup;
    IF chk_dup%FOUND THEN
        err_msg_txt := 'THE PERSON_ID IS ALREADY FOUND, THE ID IS: ' || p_person_id || ' THUS, NOT INSERTING NEW DATA ';
        RAISE ex_error;
    END IF;
    CLOSE chk_dup;

if p_person_id is null then
err_msg_txt := 'Missing mandatory value for parameter, PERSON_ID  can not be null. 
The p_person_id value returned is NULL.  ';
raise ex_error;

elsif p_person_email is null then
err_msg_txt := 'Missing mandatory value for parameter, PERSON_EMAIL  can not be null. 
The p_person_id value returned is NULL.  ';
raise ex_error;

elsif p_person_given_name is null then
err_msg_txt := 'Missing mandatory value for parameter, PERSON_GIVEN_NAME  can not be null.
The p_person_id value returned is NULL.  ';
raise ex_error;

elsif p_person_surname is null then
err_msg_txt := 'Missing mandatory value for parameter, PERSON_SURNAME  can not be null. 
The p_person_id value returned is NULL.  ';
raise ex_error;
end if;

OPEN chk_ID;
FETCH chk_ID INTO chk_pr_id;
    IF chk_ID%FOUND THEN
        err_msg_txt := 'THE EMAIL IS ALREADY EXISTED ' || p_person_email || ' IN CONTEXT TO PERSON ID WHICH IS ' || chk_pr_id ;
        RAISE ex_error;
    END IF;
    CLOSE chk_ID;
    
lv_return_value := RETURN_ID();
IF lv_return_value > 0 THEN
    DBMS_OUTPUT.PUT_LINE('Person_ID is already found and return this ' || lv_return_value || ', Thus, cannot insert values');
END IF;

INSERT INTO VM_PERSON (
    "PERSON_ID",
    "PERSON_EMAIL",
    "PERSON_GIVEN_NAME",
    "PERSON_SURNAME",
    "PERSON_PHONE")
VALUES (
    p_person_id,
    p_person_email,
    p_person_given_name,
    p_person_surname,
    p_person_phone)
    RETURNING p_person_id INTO inserted_id;
    DBMS_OUTPUT.PUT_LINE('Newly created data, has the PERSON_ID = '||inserted_id);
    COMMIT;
    
Exception
when ex_error then
dbms_output.put_line(err_msg_txt);
rollback;
when others then
dbms_output.put_line(' the error code is: ' || sqlcode);
dbms_output.put_line(' the error msg is: ' || sqlerrm);
rollback;
    
END;
/

BEGIN
    CREATE_PERSON_SP(6,'asdf','Ali','Amin','+47 91919191');
END;
/

BEGIN
    CREATE_PERSON_SP(15,'test6','Ali','Amin','+47 91919191');
END;
/
