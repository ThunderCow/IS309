CREATE_PERSON_SP.  Add a person to the VM_PERSON table. This procedure can be 
used to add a point of contact for an opportunity or organization, but can also 
be used when adding a member.  The procedure returns the identifier of the newly 
inserted person.  Duplicate email addresses are not permitted.  If a duplicate 
email is found, the procedures returns the identifier associated with that email 
address.  In the latter case, it is not an error for the given name and the 
surname to be NULL.  In this way, the procedure can be used as lookup function,
finding the person_id value for a given email address.

PARAMETERS:  Described below
RETURNS:  a new or existing person_id, using the p_location_id output parameter.  
ERROR MESSAGES:
    Error text:  "Missing mandatory value for parameter (x)  in context (y).  No person added." 
    Error meaning: A mandatory value is missing.  Here, y = 'CREATE_PERSON_SP'
	Error effect: Because a mandatory value is not provided, no data are 
            inserted into the VM_PERSON table.  The p_person_id value returned 
            is NULL.  
            
    Error text:  "Email address (x) is already used."
    Error effect: Because the email must be unique, no data are inserted into the 
            VM_PERSON data.  The p_person_ID value returned is the one that 
            corresponds to the person already in the table with this email.
*/
CREATE OR REPLACE PROCEDURE CREATE_PERSON_SP (
    p_person_ID         VM_PERSON.PERSON_ID%TYPE,
    p_person_email      VM_PERSON.PERSON_EMAIL%TYPE,
    P_person_given_name VM_PERSON.PERSON_GIVEN_NAME%TYPE,
    p_person_surname    VM_PERSON.PERSON_SURNAME%TYPE,
    p_person_phone      VM_PERSON.PERSON_PHONE%TYPE
)
IS
ex_error exception;
p_count number (10);
err_msg_txt varchar(100) :=null;

BEGIN

select count (*)
into p_count 
from VM_PERSON
where p_person_email = PERSON_EMAIL;

if p_count > 0 
then 
err_msg_txt := 'The email already exists, try another one ';
raise ex_error;
elsif p_person_email is null then
err_msg_txt := 'the email  must not be null.';
raise ex_error;
end if;

    INSERT INTO VM_PERSON ("PERSON_ID", "PERSON_EMAIL", "PERSON_GIVEN_NAME", "PERSON_SURNAME", "PERSON_PHONE")
    VALUES (p_person_id, p_person_email, p_person_given_name, p_person_surname, p_person_phone);
    COMMIT;
    
Exception
when ex_error then
dbms_output.put_line(err_msg_txt);
rollback;
when others then
dbms_output.put_line(' the error code is: ' || sqlcode);
dbms_output.put_line(' the error msg is: ' || sqlerrm);
rollback;
    
END;
/
BEGIN
    CREATE_PERSON_SP(5,'ain@AMIN.org','Ali','Amin','+47 91919191');
END;
/
